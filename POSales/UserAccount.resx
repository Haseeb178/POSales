<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAmBJREFUaEPt
        mb1rFEEYh1/xE0sV1FKxsxAURW08yO3MJTGg6IGgjf4F2ljbCTYasQnqzczlw5Ao9iLY2QUFLQQx1kaI
        YAwhCSS+M/ciYXY0t3M53yXMAw8stze/+e2xtzt7B4lEIhFH78OdkJlr6AsQ+gs6S9rt5+hV955SI8xl
        LPoVXV3HaZD6Eo0qEfWJrVhu0Cvbjvfd2NIg9aNAyXYdpBRmhLoQKFfEFcwYoDQmKmoXFmnnO7Ge07wX
        AKGuBErFmak6pTIg1HiwVJRmlFIZEPpzvlCs5hOlMiD0XL5QtD8plYFwoXjZcJfOQKE4VyiVAaFnvDKd
        +I1SGRD6nVemE6colQFh7gUKRWruUioDVXU6XCrCmjpJqUwI/TJXqriTlMaIHD6CRX54xYo4C9XGYUpj
        Rup+LLTkFWxHHGN6KaUk1FQFD+h7oOzfnIGseY5Gl4zK2D4saJ8UF9YU9l0AqR5Aj9lLo0rMwNBuPGXO
        4+r4DmSm6bTb9hS0+xKJxCahPrEDv9hH3RJGmqrTbeNrdl9psXdmoW60rk76I/qvm6Pd9wE1eGDXQTQP
        UQoTfeoAlrmFl9n3VLATp/DechN6Hu+n9P9AzZzBT3IMJ1/0ymyENnMET8VTNFsXEI2zOMnbNZN2V6lf
        g2wcp9k3gMqbbe6uLPRybrLuuwyZvg2wuoXaRNL6SfSVF87hJJwY2k6tIrAB4WAOn1GrgtjzMxzIp3x6
        jNoVwK1eA2GcZqqP2hWg9WzxKxfG5xzIJ3uoXUFa/wnOe4EczuOq4SK1ikQOH/yzXuLSriISiURiEwHw
        G5iFW4e+mCpgAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAA3VJREFUaEPt
        mUto1EAcxsc3IoKIiuhNPAhefCDiA6ntzkyroCL04ANPXhQFsUUEQSpIT4JSRazYzX+2oFKfiIIHaaGg
        eOhJVEQtiFhbC2p9UCtF638ms4Ums91kUpMs7Ac/tt3JfPkms8k8Qsoqq6wY1dAwmbDcWsKgEblHmPMU
        P5/g513C4SShzgp9ZIrFYBPShYyMC4UOkhErda0UqaJjKgZs9gUen7/YSw2EjEzSLikQhawhaFAatUvC
        YlDvCWbDHu2WkHjrUgzx2xPKhq+k4uo87ZqAmGgxhLLltHaNWbVt0/HkA54wUejWzjGLwgZDmGhksku0
        e4yiYq8xTBS4yGj3GMWdI8YwUaCwS7vHKA77jGGiQIFp9xglfwamMFHgsFy7x6h1bTPx5D99Yex5n9x0
        hcFNTxh7KJzXrgmIOcswxLAvVHi+4dR/gXZNSAzOekKFh8Ix7ZagVjdPwzCdvnDBuZ2eqTzLzcJAFveL
        aFJrmVSptm0K3jOHMWCfP7AHKt6pcSjVkr0jR2jmXMcr/gqDDyGD+N0L/A5ItbOT1DTN0EcXFoMDCK4i
        4YT+pgRFxX5swB8k34v1uqREVJOdX3iNgz1cKRbrI1MofmUuyeQ4hr2IfB8b3segaiiHrcmPO3nJHRQG
        /Z6gYfmMs/Bz2jGgmLMDKz3Eyi+RbmtkDyg/eI6YwoXlk/ILJA4XDAZ2yPtAauIa0q/8ikquEcwGdiTW
        ECYuGyrbk2CP3DdUtifBHnlgqGxPcg2BG56K0djiLNS+z3xldvQpv6KicMZQ2Z78upyJx8by8LxWfkWl
        RlGjgR1cbFa+DO74yuzoVH5F5S6cPngq25OfvlM4ZSwPixzjAos7u40mVuBUXiqT22guDwkX25VfYDFo
        9ZnY0aOWtu5brh5PWVgG1PonlNyf2DWPkR35PV7mHDeWB0U+iOyEV5KKo2iC02mDcXDalZ27yffWUxaU
        XlLhzFE+1pLb/+7U5ZfHPASiRnlVO2vw/7AXZhh7o0rVnxDJUZpDHRq3K3PzSQvxcfR1m3vj//CUF2Jo
        9CL8F8luZtlKPMlB9UiU20McHuGnfO/epf6m4hbeF5fwHjmkxpNtLbN1bfk4rsLjehFT+Dxf1Loo9ZI9
        5D4d5e7J2EbIi0BbFukjS0Q8uwp7Vm5CvEGwYdn1uqSsEhIh/wAal5bTXJEosAAAAABJRU5ErkJggg==
</value>
  </data>
</root>